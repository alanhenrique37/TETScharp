<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>